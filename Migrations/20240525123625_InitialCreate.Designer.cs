// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projekt.Data;

#nullable disable

namespace Projekt.Migrations
{
    [DbContext(typeof(ProjektContext))]
    [Migration("20240525123625_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("AuthenticationApp.Models.Danie", b =>
                {
                    b.Property<int>("DanieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DanieId");

                    b.ToTable("Danie");
                });

            modelBuilder.Entity("AuthenticationApp.Models.PlanDnia", b =>
                {
                    b.Property<int>("PlanDniaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DanieId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataDnia")
                        .HasColumnType("TEXT");

                    b.Property<int>("UzytkownikId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlanDniaId");

                    b.HasIndex("DanieId");

                    b.HasIndex("UzytkownikId");

                    b.ToTable("PlanDnia");
                });

            modelBuilder.Entity("AuthenticationApp.Models.Produkt", b =>
                {
                    b.Property<int>("ProduktId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Bialka")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Kalorycznosc")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Tluszcze")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Weglowodany")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProduktId");

                    b.ToTable("Produkt");
                });

            modelBuilder.Entity("AuthenticationApp.Models.SkladDania", b =>
                {
                    b.Property<int>("SkladDaniaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DanieId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ilosc")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProduktId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SkladDaniaId");

                    b.HasIndex("DanieId");

                    b.HasIndex("ProduktId");

                    b.ToTable("SkladDania");
                });

            modelBuilder.Entity("AuthenticationApp.Models.Uzytkownik", b =>
                {
                    b.Property<int>("UzytkownikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CzyAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Haslo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UzytkownikId");

                    b.ToTable("Uzytkownik");
                });

            modelBuilder.Entity("AuthenticationApp.Models.PlanDnia", b =>
                {
                    b.HasOne("AuthenticationApp.Models.Danie", "Danie")
                        .WithMany("PlanDnia")
                        .HasForeignKey("DanieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthenticationApp.Models.Uzytkownik", "Uzytkownik")
                        .WithMany("PlanDnia")
                        .HasForeignKey("UzytkownikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Danie");

                    b.Navigation("Uzytkownik");
                });

            modelBuilder.Entity("AuthenticationApp.Models.SkladDania", b =>
                {
                    b.HasOne("AuthenticationApp.Models.Danie", "Danie")
                        .WithMany("SkladDania")
                        .HasForeignKey("DanieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthenticationApp.Models.Produkt", "Produkt")
                        .WithMany("SkladDania")
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Danie");

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("AuthenticationApp.Models.Danie", b =>
                {
                    b.Navigation("PlanDnia");

                    b.Navigation("SkladDania");
                });

            modelBuilder.Entity("AuthenticationApp.Models.Produkt", b =>
                {
                    b.Navigation("SkladDania");
                });

            modelBuilder.Entity("AuthenticationApp.Models.Uzytkownik", b =>
                {
                    b.Navigation("PlanDnia");
                });
#pragma warning restore 612, 618
        }
    }
}
